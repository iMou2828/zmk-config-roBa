#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E     &kp R        &kp T                                        &kp Y                 &kp U  &kp I      &kp O       &kp P
&kp A             &kp S           &kp D     &kp F        &kp G        &kp F10          &kp F10        &kp H                 &kp J  &kp K      &kp L       &lt 3 MINUS
&kp Z             &kp X           &kp C     &kp V        &kp B        &kp F7           &kp F7         &kp N                 &kp M  &kp COMMA  &kp PERIOD  &lt 3 SLASH
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LWIN  &lt 3 LANG2  &lt 1 SPACE  &lt 2 LANG1      &kp BACKSPACE  &mt LEFT_SHIFT ENTER                                &kp ESC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESC           &trans          &trans     &trans     &kp LS(LG(S))                            &kp F2         &kp F5          &trans          &trans           &kp PAGE_UP
&kp TAB           &trans          &trans     &trans     &trans         &kp LC(S)      &kp LC(Z)  &kp PAGE_UP    &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp PAGE_DOWN
&kp LEFT_ALT      &trans          &kp LC(X)  &kp LC(C)  &kp LC(V)      &kp LC(A)      &kp LC(Y)  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HOME
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LWIN   &trans     &trans         &trans         &kp DEL    &kp LS(ENTER)                                                   &kp END
            >;
        };

        NUM {
            bindings = <
&kp ASTRK  &kp PLUS   &kp N7        &kp N8        &kp NUMBER_9                                    &kp LS(N9)        &kp LS(N0)         &kp PLUS   &kp BACKSLASH  &kp TILDE
&kp SLASH  &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL       &kp LS(NUMBER_1)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp APOS   &kp APOS       &kp LS(MINUS)
&trans     &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD      &kp LS(NUMBER_2)  &kp LS(APOS)      &kp LS(APOS)       &kp COLON  &kp SEMICOLON  &kp LS(SLASH)
&trans     &trans     &kp N0        &trans        &trans        &trans          &kp BACKSPACE     &kp LA(ENTER)                                                  &kp ESCAPE
            >;
        };

        SCROLL {
            bindings = <
&kp ESC           &trans          &kp LS(N7)        &kp LS(N8)        &kp LS(N9)                                                 &trans         &trans          &kp LEFT_CONTROL  &kp LEFT_SHIFT   &trans
&kp TAB           &trans          &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp LS(EQUAL)       &kp LA(LEFT_ARROW)   &kp PAGE_UP    &trans          &kp UP_ARROW      &trans           &trans
&kp LWIN          &trans          &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(PERIOD)      &kp LA(RIGHT_ARROW)  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &trans
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LS(N0)        &trans            &trans            &trans              &trans               &trans                                                            &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };
    };
};
